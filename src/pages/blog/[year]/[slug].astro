---
// for single post pages like /blog/yyyy/post-title/

import type {
  InferGetStaticParamsType,
} from "astro";

import { getCollection } from 'astro:content';

// components
import Layout from '@layouts/MarkdownPage.astro';
import BlogPost from '@components/BlogPost.astro';

export const getStaticPaths = (async () => {
  const allPosts = await getCollection('blog');
  return allPosts
    .map((post) => {
      const parts = post.slug.split('/');
      if (parts.length !== 2) {
        console.warn(`[blog] Skipping invalid slug: ${post.slug}`);
        return null;
      }
      const [year, slug] = parts;
      return { params: { year, slug } };
    })
    .filter(Boolean);
});

type Params = InferGetStaticParamsType<typeof getStaticPaths>;

const { year, slug } = Astro.params as Params;
const urlSlug = `${year}/${slug}`;
const posts = await getCollection('blog');
const post = posts.find((p) => p.slug === urlSlug);

if (!post) {
  throw new Error(`[blog] getStaticPaths returned slug '${urlSlug}', but post was not found in getCollection(). This is a build-time error.`);
}

---

<Layout post={post} title={post.data.title} description={post.data.description ?? ''}>
  <BlogPost post={post} urlslug={urlSlug} />
</Layout>
