---
// @todo refactor

import navData from '@data/navigation.json';
import ThemeSelect from '@components/ThemeSelect.astro';
import { getHomepageUrl } from '@utils/getHomepageUrl';
import siteinfo from '@data/site.json';
import { Icon } from 'astro-icon/components';
---

<div class="sticky top-0 z-50 flex flex-wrap md:flex-nowrap items-center md:items-start gap-4
          bg-zinc-100 dark:bg-zinc-900
          text-zinc-950 dark:text-zinc-50
">

  <!-- Child 1: Always left -->
  <div class="order-1 flex-1" id="sitetitle">
    <a
      id="navbar-brand"
      href={getHomepageUrl()}
      class="font-changa flex-rows flex items-center gap-2 p-1.5 text-2xl opacity-0 transition-opacity duration-600 ease-in-out"
    >
      <Icon name="bi:house-fill" class="place-self-center" />
      {siteinfo.title}
    </a>
  </div>

  <!-- Child 2: Right on mobile, hidden on md+ -->
  <div class="order-2 md:hidden" id="hamburger-and-close">
    <Icon
      name="bi:list"
      class="is--mobile-menu-hamburger open-icon place-self-center text-xl text-brand-500 dark:text-brand-400"
    />
    <Icon
      name="bi:x"
      class="is--mobile-menu-hamburger close-icon hidden place-self-center text-xl text-brand-500 dark:text-brand-400"
    />
  </div>

  <!-- Child 3: Full width on mobile below, right-aligned on md+ -->
  <div class="order-3 w-full text-center md:order-2 md:w-auto md:ml-auto justify-center" id="navigation-and-theme-select">
    <ul class="flex flex-col md:flex-row justify-center md:justify-between">
      {
        navData.map(value => (
          <li>
            <a href={value.link} class="px-3 py-2">{value.label}</a>
          </li>
        ))
      }
      <li><ThemeSelect hideAuto /></li>
    </ul>
  </div>

</div>

<script is:inline>
  // toggle mobile menu open/close state and icons
  window.kdev = window.kdev || {};
  window.kdev.mobileOpen = false;
  const closeIcon = document.querySelector('.close-icon');
  const openIcon = document.querySelector('.open-icon');
  const navSection = document.querySelector('#navigation-and-theme-select');

  const toggleIcons = () => {
    if (window.kdev.mobileOpen) {
      closeIcon?.classList.remove('hidden');
      openIcon?.classList.add('hidden');
    } else {
      closeIcon?.classList.add('hidden');
      openIcon?.classList.remove('hidden');
    }
  };
  const toggleNavVisibility = () => {
    if (!navSection) return;
    const isMdUp = window.matchMedia('(min-width: 768px)').matches;
    if (isMdUp) {
      navSection.classList.remove('hidden');
      navSection.classList.add('flex');
    } else {
      if (window.kdev.mobileOpen) {
        navSection.classList.remove('hidden');
        navSection.classList.add('flex');
      } else {
        navSection.classList.add('hidden');
        navSection.classList.remove('flex');
      }
    }
  };

  window.addEventListener('resize', toggleNavVisibility);

  const menuToggle = document.querySelector('#hamburger-and-close');
  if (menuToggle) {
    menuToggle.addEventListener('click', () => {
      window.kdev.mobileOpen = !window.kdev.mobileOpen;
      toggleIcons();
      toggleNavVisibility();
    });
  }
  toggleIcons();
  toggleNavVisibility();

  // hide/show sticky brand based on scroll position
  const placeholder = document.querySelector('#sitetitle');
  const stickyBrand = document.querySelector('#navbar-brand');

  if (!placeholder || !stickyBrand) {
    console.warn('Placeholder or sticky brand element not found.');
  } else {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (!entry) return;
        if (!entry.isIntersecting) {
          stickyBrand.classList.add('opacity-100');
          stickyBrand.classList.remove('opacity-0');
        } else {
          stickyBrand.classList.remove('opacity-100');
          stickyBrand.classList.add('opacity-0');
        }
      },
      { threshold: 0 },
    );

    observer.observe(placeholder);

    const isIntersecting =
      placeholder.getBoundingClientRect().top >= 0 &&
      placeholder.getBoundingClientRect().bottom > 0;

    if (!isIntersecting) {
      stickyBrand.classList.add('sticky-visible');
    } else {
      stickyBrand.classList.remove('sticky-visible');
    }
  }
</script>
