---

// https://docs.astro.build/en/guides/view-transitions/
import { ClientRouter } from "astro:transitions";

import ThemeManager from '@components/ThemeManager.astro';

import type { MetaConfig } from '../types/MetaConfig';
import metaDataRaw from '@data/meta.json';
const metaData = metaDataRaw as MetaConfig;

const { title, description, image, ...props } = Astro.props;

const baseUrl = import.meta.env.BASE_URL;
---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>{props.title}</title>
<base href={baseUrl} target="_self">
<meta name="description" content={props.description} />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta property="og:title" content={props.title} />
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:description" content={props.description} />
<meta property="og:image" content={props.image} />
<meta property="og:image:alt" content="" />
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={props.title} />
<meta property="twitter:description" content={props.description} />
<meta property="twitter:image" content={props.image} />
<ClientRouter />
<ThemeManager defaultTheme="auto" />
<link rel="sitemap" href="/sitemap-index.xml" />
{Object.entries(metaData.name).map(([name, content]) => (
  <meta name={name} content={content} />
))}
{Object.entries(metaData.httpEquiv).map(([httpEquiv, content]) => (
  <meta http-equiv={httpEquiv} content={content} />
))}

<meta name="generator" content={Astro.generator} />
