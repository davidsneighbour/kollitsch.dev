{
  "$schema": "https://biomejs.dev/schemas/2.2.7/schema.json",
  // Assist actions keep imports and structured data deterministic for reviewers.
  // Docs: https://biomejs.dev/guides/configure-biome/#assist
  "assist": {
    "actions": {
      "source": {
        // Sort imports so diffs remain focused on substantive changes.
        "organizeImports": "on",
        // Ensure JSON key ordering stays stable when the assistant rewrites files.
        "useSortedKeys": "on"
      }
    }
  },
  "files": {
    // Restrict processing to project files while skipping workspace settings noise.
    // Docs: https://biomejs.dev/guides/configure-biome/#filesincludes
    "includes": ["**", "!**/.vscode/**/*"]
  },
  // Formatter configuration avoids touching generated output and matches team spacing conventions.
  // Docs: https://biomejs.dev/guides/configure-biome/#formatter
  "formatter": {
    // Ignore build outputs and coverage artifacts to shorten formatting passes.
    "includes": ["**", "!**/build", "!**/coverage"],
    // Prefer spaces to align with Astro project style guides and existing files.
    "indentStyle": "space",
    // Allow project-specific indentation overrides stored in .editorconfig.
    "useEditorconfig": true
  },
  "javascript": {
    // Register Astro runtime globals so linting treats template helpers as defined.
    // Docs: https://biomejs.dev/guides/configure-biome/#javascript
    "globals": [
      "Astro",
      "ENVIRONMENT",
      "OffscreenCanvas",
      "onpointerleave",
      "onpointerenter",
      "onemptied",
      "onmouseenter",
      "onkeypress",
      "onloadeddata",
      "oninvalid",
      "onmouseup",
      "onvolumechange",
      "onpointerout",
      "onstorage",
      "onpause",
      "onkeyup",
      "onabort",
      "onanimationstart",
      "onafterprint",
      "onblur",
      "ondurationchange",
      "onwaiting",
      "ondeviceorientation",
      "oncanplaythrough",
      "onclose",
      "onbeforeunload",
      "onanimationend",
      "onmouseleave",
      "oncancel",
      "onseeked",
      "onpointerover",
      "ondragleave",
      "ongotpointercapture",
      "onloadedmetadata",
      "onpageshow",
      "onplay",
      "onunhandledrejection",
      "onbeforeprint",
      "onstalled",
      "oncontextmenu",
      "onreset",
      "onpointercancel",
      "onsubmit",
      "ondrag",
      "onload",
      "onlostpointercapture",
      "onsuspend",
      "ondragstart",
      "onpagehide",
      "onmessage",
      "location",
      "onoffline",
      "onappinstalled",
      "onrejectionhandled",
      "onunload",
      "onwheel",
      "onended",
      "onmousedown",
      "onpointerup",
      "onmouseover",
      "onkeydown",
      "onclick",
      "onfocus",
      "onscroll",
      "onresize",
      "onsearch",
      "ontoggle",
      "oncanplay",
      "onlanguagechange",
      "onpointerdown",
      "ondeviceorientationabsolute",
      "ondragenter",
      "onauxclick",
      "onerror",
      "onpointermove",
      "onmousemove",
      "ondevicemotion",
      "ondrop",
      "onhashchange",
      "onanimationiteration",
      "ondblclick",
      "onratechange",
      "ontransitionend",
      "ondragend",
      "onpopstate",
      "onplaying",
      "onchange",
      "onselect",
      "onbeforeinstallprompt",
      "onmouseout",
      "ontimeupdate",
      "ondragover",
      "oncuechange",
      "onprogress",
      "onloadstart",
      "onseeking",
      "oninput",
      "onmessageerror",
      "onmousewheel",
      "ononline"
    ]
  },
  // Linter settings balance strictness with Astro component ergonomics.
  // Docs: https://biomejs.dev/guides/configure-biome/#linter
  "linter": {
    "domains": {
      // Apply project and test rules consistently across the repo hierarchy.
      "project": "all",
      "test": "all"
    },
    // Skip generated linting scaffolding bundled in the repo template.
    "includes": ["**", "!src/packages/linting/biome-setup.jsonc"],
    // https://biomejs.dev/linter/javascript/rules/
    "rules": {
      "complexity": {
        "noAdjacentSpacesInRegex": "error",
        "noExtraBooleanCast": "error",
        "noUselessCatch": "error"
      },
      "correctness": {
        "noConstAssign": "error",
        "noConstantCondition": "error",
        "noEmptyCharacterClassInRegex": "error",
        "noEmptyPattern": "error",
        "noGlobalObjectCalls": "error",
        "noInvalidBuiltinInstantiation": "error",
        "noInvalidConstructorSuper": "error",
        "noNonoctalDecimalEscape": "error",
        "noPrecisionLoss": "error",
        "noSelfAssign": "error",
        "noSetterReturn": "error",
        "noSwitchDeclarations": "error",
        "noUndeclaredVariables": "error",
        "noUnreachable": "error",
        "noUnreachableSuper": "error",
        "noUnsafeFinally": "error",
        "noUnsafeOptionalChaining": "error",
        "noUnusedLabels": "error",
        "noUnusedPrivateClassMembers": "error",
        "noUnusedVariables": "error",
        "useIsNan": "error",
        "useValidForDirection": "error",
        "useValidTypeof": "error",
        "useYield": "error"
      },
      "performance": {
        "noBarrelFile": "error",
        "noReExportAll": "error"
      },
      "recommended": false,
      "suspicious": {
        "noAssignInExpressions": "error",
        "noAsyncPromiseExecutor": "error",
        "noCatchAssign": "error",
        "noClassAssign": "error",
        "noCompareNegZero": "error",
        "noControlCharactersInRegex": "error",
        "noDebugger": "error",
        "noDuplicateCase": "error",
        "noDuplicateClassMembers": "error",
        "noDuplicateObjectKeys": "error",
        "noDuplicateParameters": "error",
        "noEmptyBlockStatements": "error",
        "noExplicitAny": "error",
        "noFallthroughSwitchClause": "error",
        "noFunctionAssign": "error",
        "noGlobalAssign": "error",
        "noImportAssign": "error",
        "noMisleadingCharacterClass": "error",
        "noPrototypeBuiltins": "error",
        "noRedeclare": "error",
        "noShadowRestrictedNames": "error",
        "noUnsafeNegation": "error",
        "noWith": "error",
        "useGetterReturn": "error"
      }
    }
  },
  // Overrides tailor formatting and linting to Astro component ergonomics and config files.
  // Docs: https://biomejs.dev/guides/configure-biome/#overrides
  "overrides": [
    {
      // Placeholder to scope future HTML tweaks without affecting other formats.
      "includes": ["**/*.html"]
    },
    {
      "includes": ["**/*.js", "**/*.ts"],
      "javascript": {
        "formatter": {
          // Prefer single quotes in authored scripts to match legacy linting expectations.
          "quoteStyle": "single"
        }
      },
      "linter": {
        "rules": {
          "correctness": {
            // required for Astro components
            // https://biomejs.dev/linter/rules/no-undeclared-variables/
            "noUndeclaredDependencies": "off",
            // required for Astro components
            // https://biomejs.dev/linter/rules/no-undeclared-variables/
            "noUnusedVariables": "off"
          }
        }
      }
    },
    {
      "includes": ["**/*.properties"]
    },
    {
      "includes": ["**/*.astro"],
      "linter": {
        "rules": {
          "correctness": {
            // required for Astro components
            // https://biomejs.dev/linter/rules/no-undeclared-variables/
            "noUndeclaredDependencies": "off",
            // required for Astro components
            // https://biomejs.dev/linter/rules/no-undeclared-variables/
            "noUnusedVariables": "off"
          },
          "nursery": {
            // Astro's compiler resolves components, so unresolved import reports are noise.
            "noUnresolvedImports": "off"
          },
          "style": {
            // Astro templates mix script and markup, so const/import-type rules would over-fire.
            "useConst": "off",
            "useImportType": "off"
          }
        }
      }
    }
  ],
  // Track repository metadata so Biome integrates with Git defaults in this monorepo.
  // Docs: https://biomejs.dev/guides/configure-biome/#vcs
  "vcs": {
    // Explicitly pin Git integration for consistent staged file detection.
    "clientKind": "git",
    // Match the repository's default branch to help Biome determine base revisions.
    "defaultBranch": "main",
    // Keep VCS integration active so formatting respects `.gitignore` and staged files.
    "enabled": true,
    // Defer ignore handling to `.gitignore` to avoid duplicating ignore lists.
    "useIgnoreFile": true
  }
}
