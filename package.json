{
  "name": "@davidsneighbour/kollitsch-dev",
  "version": "2022.5.52",
  "license": "UNLICENSED",
  "description": "Website and content for kollitsch.dev",
  "author": {
    "name": "Patrick Kollitsch",
    "email": "patrick@davids-neighbour.com",
    "web": "https://davids-neighbour.com"
  },
  "homepage": "https://kollitsch.dev",
  "repository": "davidsneighbour/kollitsch.dev",
  "dependencies": {
    "@davidsneighbour/bootstrap-config": "^4.0.4",
    "@davidsneighbour/browserslist-config": "^4.0.4",
    "@davidsneighbour/commitlint-config": "^4.0.4",
    "@davidsneighbour/cssnano-config": "^4.0.4",
    "@davidsneighbour/cypress-config": "^4.0.4",
    "@davidsneighbour/eslint-config": "^4.0.5",
    "@davidsneighbour/htmlvalidate-config": "^0.0.16",
    "@davidsneighbour/postcss-config": "^4.0.5",
    "@davidsneighbour/prettier-config": "^4.0.5",
    "@davidsneighbour/standard-version-config": "^4.0.5",
    "@davidsneighbour/stylelint-config": "^4.0.4",
    "@davidsneighbour/tools": "^4.0.5",
    "@fullhuman/postcss-purgecss": "^4.1.3",
    "@types/bootstrap": "^5.1.11",
    "algoliasearch": "^4.13.0",
    "alpinejs": "^3.10.2",
    "dotenv": "^16.0.1",
    "instantsearch.js": "^4.40.5",
    "lazysizes": "^5.3.2",
    "lighthouse-plugin-field-performance": "^3.0.0",
    "link-checker": "^1.4.2",
    "lite-youtube-embed": "^0.2.0",
    "lockfile-lint": "^4.7.4",
    "netlify-cli": "^10.3.1",
    "ninja-keys": "^1.2.1",
    "pixrem": "^5.0.0",
    "reasonable-colors": "^0.4.0",
    "sass": "^1.51.0",
    "svgo": "^2.8.0",
    "trim": ">=1.0.1",
    "typescript": "^4.6.4",
    "web-vitals-element": "^1.3.7",
    "xml2js": "^0.4.23"
  },
  "scripts": {
    "audit:html": "wireit",
    "audit:hugo": "wireit",
    "build": "wireit",
    "build:critical": "wireit",
    "build:frontmatter": "wireit",
    "build:hugo": "wireit",
    "build:script": "wireit",
    "check-env": "wireit",
    "clean": "wireit",
    "clean:audit": "wireit",
    "clean:cypress": "wireit",
    "clean:hugo": "wireit",
    "clean:netlify": "wireit",
    "clean:npm": "wireit",
    "commit": "wireit",
    "cypress": "wireit",
    "cypress:info": "wireit",
    "cypress:install": "wireit",
    "cypress:run": "wireit",
    "cypress:verify": "wireit",
    "deploy": "wireit",
    "deploy:test": "wireit",
    "lighthouse": "wireit",
    "lint:html": "wireit",
    "lint:html:config": "wireit",
    "lint:links": "wireit",
    "lint:lockfiles": "wireit",
    "lint:scripts": "wireit",
    "lint:scripts:fix": "wireit",
    "lint:styles": "wireit",
    "lint:styles:fix": "wireit",
    "lint:templates": "wireit",
    "prettier": "wireit",
    "prettier:fix": "wireit",
    "release": "wireit",
    "release:major": "wireit",
    "release:minor": "wireit",
    "serve": "wireit",
    "serve:hugo": "wireit",
    "serve:script": "wireit",
    "server": "wireit",
    "server:paranoid": "wireit",
    "tests": "wireit",
    "update": "wireit",
    "watch": "wireit"
  },
  "private": true,
  "browserslist": [
    "extends @davidsneighbour/browserslist-config"
  ],
  "commitlint": {
    "extends": [
      "@davidsneighbour/commitlint-config"
    ]
  },
  "eslintConfig": {
    "extends": [
      "@davidsneighbour/eslint-config"
    ]
  },
  "prettier": "@davidsneighbour/prettier-config",
  "remarkConfig": {
    "plugins": [
      "@davidsneighbour/remark-config"
    ]
  },
  "watch": {
    "build:frontmatter": "assets/config/frontmatter/**/*.*"
  },
  "wireit": {
    "audit:html": {
      "command": "html-validate public/**/*.html --config=tests/html-validator/config.json"
    },
    "audit:hugo": {
      "command": "./bin/audit/audit"
    },
    "build": {
      "command": "run-s build:critical build:hugo"
    },
    "build:critical": {
      "command": ""
    },
    "build:frontmatter": {
      "command": "node assets/config/frontmatter/build.ts"
    },
    "build:hugo": {
      "command": "./bin/build/hugo"
    },
    "build:script": {
      "command": "tsc"
    },
    "deploy:test": {
      "command": "bin/deploy/test"
    },
    "deploy": {
      "command": "bin/deploy/live"
    },
    "check-env": {
      "command": "node -e 'console.log(process.env)' | grep npm_config_"
    },
    "clean": {
      "command": "run-p clean:*"
    },
    "clean:audit": {
      "command": "rimraf tests/lighthouse/reports/*.{csv,html,json}"
    },
    "clean:cypress": {
      "command": "rimraf tests/cypress/{downloads,screenshots,videos}/*"
    },
    "clean:hugo": {
      "command": "rimraf hugo{.log,_stats.json} resources public assets/jsconfig.json .hugo_build.lock"
    },
    "clean:npm": {
      "command": "rimraf node_modules package-lock.json"
    },
    "clean:netlify": {
      "command": "rimraf .netlify/cache .netlify/functions"
    },
    "commit": {
      "command": "./node_modules/cz-customizable/standalone.js"
    },
    "cypress": {
      "command": "npm run cypress:run"
    },
    "cypress:info": {
      "command": "cypress info"
    },
    "cypress:install": {
      "command": "cypress install"
    },
    "cypress:run": {
      "command": "cypress open --config-file tests/cypress/cypress.json"
    },
    "cypress:verify": {
      "command": "cypress verify"
    },
    "lighthouse": {
      "command": "bin/audit/lighthouse"
    },
    "lint:links": {
      "command": "link-checker public/"
    },
    "lint:html": {
      "command": "html-validate --config=tests/html-validator/config.json public"
    },
    "lint:html:config": {
      "command": "html-validate --print-config --config=tests/html-validator/config.json"
    },
    "lint:lockfiles": {
      "command": "lockfile-lint --path package-lock.json --type=npm"
    },
    "lint:scripts": {
      "command": "eslint assets/js --ext .ts"
    },
    "lint:scripts:fix": {
      "command": "eslint assets/js --ext .ts --fix"
    },
    "lint:styles": {
      "command": "stylelint assets/scss"
    },
    "lint:styles:fix": {
      "command": "stylelint assets/scss --fix"
    },
    "lint:templates": {
      "command": "bin/audit/lint-template-style"
    },
    "prettier": {
      "command": "prettier 'assets/**/*.ts'"
    },
    "prettier:fix": {
      "command": "prettier --write 'assets/**/*.ts'"
    },
    "release": {
      "command": "standard-version --release-as patch --sign -a -t \"v\" --releaseCommitMessageFormat \"chore(release): v{{currentTag}}\" && ./bin/release/postrelease"
    },
    "release:major": {
      "command": "standard-version --release-as major --sign -a -t \"v\" --releaseCommitMessageFormat \"chore(release): v{{currentTag}}\" && ./bin/release/postrelease"
    },
    "release:minor": {
      "command": "standard-version --release-as minor --sign -a -t \"v\" --releaseCommitMessageFormat \"chore(release): v{{currentTag}}\" && ./bin/release/postrelease"
    },
    "serve": {
      "command": "run-p serve:hugo"
    },
    "serve:hugo": {
      "command": "bin/server/run"
    },
    "serve:script": {
      "command": "tsc --watch"
    },
    "server": {
      "command": "run-p serve watch"
    },
    "server:paranoid": {
      "command": "bin/server/run-paranoid"
    },
    "tests": {
      "command": "npm run cypress"
    },
    "update": {
      "command": "npm-check-updates -u && npm install && fixpack && npx browserslist@latest --update-db"
    },
    "watch": {
      "command": "npm-watch"
    }
  }
}
