---
interface Props {
  classes?: string;
}
const {
  classes = "progress z-40 relative [--height:4px] lg:[--height:6px]"
}: Props = Astro.props;
---

<div
  class={classes}
  role="progressbar"
  aria-label="Reading progress"
  aria-valuenow="0"
  aria-valuemin="0"
  aria-valuemax="100"
>
  <div
    class="progress-bar progress-bar-striped progress-bar-animated h-[--height]"
    style="width: var(--scroll);"
  >
  </div>
</div>

<script is:inline>
  document.addEventListener('scroll', () => {
    // update the progress bar... progress... state... thing
    const scroll =
      ((document.documentElement.scrollTop || document.body.scrollTop) /
        ((document.documentElement.scrollHeight || document.body.scrollHeight) -
          document.documentElement.clientHeight)) *
      100;
    // Get the progress bar element (plain JavaScript, no type assertion)
    const progress = document.querySelector('.progress');
    if (progress) {
      progress.style.setProperty('--scroll', `${scroll}%`);
      progress.setAttribute('aria-valuenow', scroll.toFixed(2));
    }
  });
  setTimeout(() => {
    // trigger the scroll event after 500ms for some initial set-up
    document.dispatchEvent(new Event('scroll'));
  }, 500);
</script>

<style>
  @keyframes progress-bar-stripes {
    0% {
      background-position-x: 0;
    }

    100% {
      background-position-x: var(--bs-progress-height);
    }
  }

  .progress {
    --bs-progress-height: var(--thickness, 4px);;
    --bs-progress-font-size: 0.75rem;
    --bs-progress-bg: var(--bs-secondary-bg);
    --bs-progress-border-radius: var(--bs-border-radius);
    --bs-progress-box-shadow: var(--bs-box-shadow-inset);
    --bs-progress-bar-color: #ffffff;
    --bs-progress-bar-bg: #ff5500;
    --bs-progress-bar-transition: width 0.6s ease;

    display: flex;
    height: var(--bs-progress-height);
    overflow: hidden;
    font-size: var(--bs-progress-font-size);
    background-color: var(--bs-progress-bg);
    border-radius: var(--bs-progress-border-radius);
  }

  .progress-bar {
    display: flex;
    flex-direction: column;
    justify-content: center;
    overflow: hidden;
    color: var(--bs-progress-bar-color);
    text-align: center;
    white-space: nowrap;
    background-color: var(--bs-progress-bar-bg);
    transition: var(--bs-progress-bar-transition);
  }

  @media (prefers-reduced-motion: reduce) {
    .progress-bar {
      transition: none;
    }
  }

  .progress-bar-striped {
    background-image: linear-gradient(
      -45deg,
      rgba(255, 255, 255, 0.15) 25%,
      transparent 25%,
      transparent 50%,
      rgba(255, 255, 255, 0.15) 50%,
      rgba(255, 255, 255, 0.15) 75%,
      transparent 75%,
      transparent
    );
    background-size: var(--bs-progress-height) var(--bs-progress-height);
  }

  .progress-bar-animated {
    animation: 1s linear infinite progress-bar-stripes;
  }

  @media (prefers-reduced-motion: reduce) {
    .progress-bar-animated {
      animation: none;
    }
  }
</style>
