---
// @todo refactor and comment
import type { CollectionEntry } from "astro:content";
import { hasComponent } from "@utils/component.ts";
import type { MarkdownInstance } from "astro";

type BlogEntry =
  | CollectionEntry<"blog">
  | (MarkdownInstance<Record<string, unknown>> & {
      data?: Record<string, unknown>;
    });

export interface Props {
  post?: BlogEntry;
}

const { post }: Props = Astro.props;

const hasLiteYoutube = hasComponent(post?.data, "lite-youtube");
const hasColorGrid = hasComponent(post?.data, "color-grid");
const hasDatediff = hasComponent(post?.data, "date-diff");
---

{
  hasLiteYoutube && (
    <>
      <script src="/vendor/lite-youtube-embed/lite-yt-embed.js" async is:inline />
    </>
  )
}

{
  hasColorGrid && (
    <>
      <script src="/vendor/color-grid.js" async is:inline />
    </>
  )
}

{
  hasDatediff && (
    <>
      <script src="/vendor/datediff.js" async is:inline />
    </>
  )
}
