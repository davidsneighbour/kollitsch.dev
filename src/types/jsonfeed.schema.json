{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "properties": {
    "version": {
      "title": "Version URL",
      "description": "The URL of the version of the format the feed uses. This should appear at the very top, though we recognize that not all JSON generators allow for ordering.",
      "type": "string",
      "format": "uri",
      "enum": [
        "https://jsonfeed.org/version/1.1",
        "https://jsonfeed.org/version/1"
      ]
    },
    "title": {
      "title": "Title",
      "description": "The name of the feed, which will often correspond to the name of the website (blog, for instance), though not necessarily.",
      "type": "string"
    },
    "home_page_url": {
      "title": "Home Page URL",
      "description": "The URL of the resource that the feed describes. This resource may or may not actually be a “home” page, but it should be an HTML page. If a feed is published on the public web, this should be considered as required. But it may not make sense in the case of a file created on a desktop computer, when that file is not shared or is shared only privately.",
      "type": "string",
      "format": "uri"
    },
    "feed_url": {
      "title": "Feed URL",
      "description": "The URL of the feed, and serves as the unique identifier for the feed. As with home_page_url, this should be considered required for feeds on the public web.",
      "type": "string",
      "format": "uri"
    },
    "description": {
      "title": "Description",
      "description": "Provides more detail, beyond the title, on what the feed is about. A feed reader may display this text.",
      "type": "string"
    },
    "user_comment": {
      "title": "User Comment",
      "description": "A description of the purpose of the feed. This is for the use of people looking at the raw JSON, and should be ignored by feed readers.",
      "type": "string"
    },
    "next_url": {
      "title": "Next Page URL",
      "description": "The URL of a feed that provides the next n items, where n is determined by the publisher. This allows for pagination, but with the expectation that reader software is not required to use it and probably won’t use it very often. next_url must not be the same as feed_url, and it must not be the same as a previous next_url (to avoid infinite loops).",
      "type": "string",
      "format": "uri"
    },
    "icon": {
      "title": "Icon URL",
      "description": "The URL of an image for the feed suitable to be used in a timeline, much the way an avatar might be used. It should be square and relatively large — such as 512 x 512 pixels — so that it can be scaled-down and so that it can look good on retina displays. It should use transparency where appropriate, since it may be rendered on a non-white background.",
      "type": "string",
      "format": "uri"
    },
    "favicon": {
      "title": "Favicon URL",
      "description": "The URL of an image for the feed suitable to be used in a source list. It should be square and relatively small, but not smaller than 64 x 64 pixels (so that it can look good on retina displays). As with icon, this image should use transparency where appropriate, since it may be rendered on a non-white background.",
      "type": "string",
      "format": "uri"
    },
    "author": {
      "title": "Feed Author",
      "description": "Specifies the feed author.",
      "deprecated": true,
      "allOf": [
        {
          "$ref": "#/$defs/author"
        }
      ]
    },
    "authors": {
      "title": "Feed Authors",
      "description": "Specifies one or more feed authors.",
      "type": "array",
      "items": {
        "$ref": "#/$defs/author"
      },
      "minItems": 1
    },
    "language": {
      "title": "Feed Language",
      "description": "The primary language for the feed in the format specified in RFC 5646. The value is usually a 2-letter language tag from ISO 639-1, optionally followed by a region tag.",
      "type": "string",
      "examples": ["en", "en-US"]
    },
    "expired": {
      "title": "Expired",
      "description": "Whether or not the feed is finished — that is, whether or not it will ever update again. A feed for a temporary event, such as an instance of the Olympics, could expire. If the value is true, then it’s expired. Any other value, or the absence of expired, means the feed may continue to update.",
      "type": "boolean"
    },
    "hubs": {
      "title": "Hubs",
      "description": "Specifies one or more endpoints that can be used to subscribe to real-time notifications from the publisher of this feed.",
      "type": "array",
      "items": {
        "$ref": "#/$defs/hub"
      },
      "minItems": 1
    },
    "items": {
      "title": "Feed Items",
      "description": "An array of items in the feed.",
      "type": "array",
      "items": {
        "$ref": "#/$defs/item"
      }
    }
  },
  "required": ["version", "title", "items"],
  "patternProperties": {
    "^_[^.]*$": {
      "$ref": "#/$defs/extension"
    }
  },
  "additionalProperties": false,
  "$defs": {
    "author": {
      "title": "Author",
      "description": "Specifies a feed author. The author object has several members. These are all optional — but if you provide an author object, then at least one is required.",
      "type": "object",
      "properties": {
        "name": {
          "title": "Author Name",
          "description": "The author's name",
          "type": "string"
        },
        "url": {
          "title": "Author URL",
          "description": "The URL of a site owned by the author. It could be a blog, micro-blog, Twitter account, and so on. Ideally the linked-to page provides a way to contact the author, but that’s not required. The URL could be a mailto: link, though we suspect that will be rare.",
          "type": "string",
          "format": "uri"
        },
        "avatar": {
          "title": "Author Avatar",
          "description": "The URL for an image for the author. As with icon, it should be square and relatively large — such as 512 x 512 pixels — and should use transparency where appropriate, since it may be rendered on a non-white background.",
          "type": "string",
          "format": "uri"
        }
      },
      "minProperties": 1,
      "patternProperties": {
        "^_[^.]*$": {
          "$ref": "#/$defs/extension"
        }
      },
      "additionalProperties": false
    },
    "hub": {
      "title": "Hub",
      "description": "Describes endpoints that can be used to subscribe to real-time notifications from the publisher of this feed.",
      "type": "object",
      "properties": {
        "type": {
          "title": "Hub Type",
          "description": "Describes the protocol used to talk with the hub.",
          "type": "string",
          "enum": ["rssCloud", "WebSub"]
        },
        "url": {
          "title": "Hub URL",
          "description": "The URL of the hub used to subscribe to the feed.",
          "type": "string",
          "format": "uri"
        }
      },
      "required": ["type", "url"],
      "patternProperties": {
        "^_[^.]*$": {
          "$ref": "#/$defs/extension"
        }
      },
      "additionalProperties": false
    },
    "item": {
      "title": "Feed Item",
      "description": "An item belonging to this feed.",
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "description": "A unique id for that item for that feed over time. If an item is ever updated, the id should be unchanged. New items should never use a previously-used id. Ideally, the id is the full URL of the resource described by the item, since URLs make great unique identifiers.",
          "type": "string",
          "oneOf": [
            {},
            {
              "format": "uri"
            }
          ]
        },
        "url": {
          "title": "URL",
          "description": "The URL of the resource described by the item. It’s the permalink. This may be the same as the id — but should be present regardless.",
          "type": "string",
          "format": "uri"
        },
        "external_url": {
          "title": "External URL",
          "description": "The URL of a page elsewhere. This is especially useful for linkblogs. If url links to where you’re talking about a thing, then external_url links to the thing you’re talking about.",
          "type": "string",
          "format": "uri"
        },
        "title": {
          "title": "Title",
          "description": "Plain text. Microblog items in particular may omit titles.",
          "type": "string"
        },
        "content_html": {
          "title": "HTML Content",
          "description": "The HTML content of the item.",
          "type": "string",
          "contentMediaType": "text/html"
        },
        "content_text": {
          "title": "Plain Text Content",
          "description": "The plain text content of the item.",
          "type": "string",
          "contentMediaType": "text/plain"
        },
        "summary": {
          "title": "Summary",
          "description": "A plain text sentence or two describing the item. This might be presented in a timeline, for instance, where a detail view would display all of content_html or content_text.",
          "type": "string"
        },
        "image": {
          "title": "Image",
          "description": "The URL of the main image for the item. This image may also appear in the content_html — if so, it’s a hint to the feed reader that this is the main, featured image. Feed readers may use the image as a preview (probably resized as a thumbnail and placed in a timeline).",
          "type": "string",
          "format": "uri"
        },
        "banner_image": {
          "title": "Banner Image",
          "description": "The URL of an image to use as a banner. Some blogging systems (such as Medium) display a different banner image chosen to go with each post, but that image wouldn’t otherwise appear in the content_html. A feed reader with a detail view may choose to show this banner image at the top of the detail view, possibly with the title overlaid.",
          "type": "string",
          "format": "uri"
        },
        "date_published": {
          "title": "Date Published",
          "description": "Specifies the date published in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "examples": ["2010-02-07T14:04:00-05:00"]
        },
        "date_modified": {
          "title": "Date Modified",
          "description": "Specifies the modification date in RFC 3339 format.",
          "type": "string",
          "format": "date-time",
          "examples": ["2010-02-07T14:04:00-05:00"]
        },
        "author": {
          "title": "Feed Author",
          "description": "Specifies the feed author.",
          "deprecated": true,
          "allOf": [
            {
              "$ref": "#/$defs/author"
            }
          ]
        },
        "authors": {
          "title": "Feed Authors",
          "description": "Specifies one or more feed authors.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/author"
          },
          "minItems": 1
        },
        "tags": {
          "title": "Tags",
          "description": "Any plain text values you want. Tags tend to be just one word, but they may be anything. Note: they are not the equivalent of Twitter hashtags. Some blogging systems and other feed formats call these categories.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "title": "Feed Language",
          "description": "The language for this item, in the format specified in RFC 5646. The value is usually a 2-letter language tag from ISO 639-1, optionally followed by a region tag. The value can be different than the primary language for the feed when a specific item is written in a different language than other items in the feed.",
          "type": "string",
          "examples": ["en", "en-US"]
        },
        "attachments": {
          "title": "Attachments",
          "description": "A list of related resources. Podcasts, for instance, would include an attachment that’s an audio or video file.",
          "type": "array",
          "items": {
            "$ref": "#/$defs/attachment"
          },
          "minItems": 1
        }
      },
      "anyOf": [
        {
          "required": ["content_html"]
        },
        {
          "required": ["content_text"]
        }
      ],
      "required": ["id"],
      "patternProperties": {
        "^_[^.]*$": {
          "$ref": "#/$defs/extension"
        }
      },
      "additionalProperties": false
    },
    "attachment": {
      "title": "Attachment",
      "description": "A related resource. Podcasts, for instance, would include an attachment that’s an audio or video file.",
      "type": "object",
      "properties": {
        "url": {
          "title": "URL",
          "description": "Specifies the location of the attachment.",
          "type": "string",
          "format": "uri"
        },
        "mime_type": {
          "title": "Mimetype",
          "description": "Specifies the type of the attachment, such as",
          "type": "string",
          "pattern": "^.*/.*$",
          "examples": ["audio/mpeg"]
        },
        "title": {
          "title": "Title",
          "description": "A name for the attachment. Important: if there are multiple attachments, and two or more have the exact same title (when title is present), then they are considered as alternate representations of the same thing. In this way a podcaster, for instance, might provide an audio recording in different formats.",
          "type": "string"
        },
        "size_in_bytes": {
          "title": "Size In Bytes",
          "description": "Specifies how large the file is.",
          "type": "integer"
        },
        "duration_in_seconds": {
          "title": "Duration In Seconds",
          "description": "Specifies how long it takes to listen to or watch, when played at normal speed.",
          "type": "integer"
        }
      },
      "required": ["url"],
      "patternProperties": {
        "^_[^.]*$": {
          "$ref": "#/$defs/extension"
        }
      },
      "additionalProperties": false
    },
    "extension": {
      "description": "Property added by an extension",
      "patternProperties": {
        "^[^.]*$": {
          "$ref": "#/$defs/extension"
        }
      },
      "additionalProperties": false
    }
  }
}
