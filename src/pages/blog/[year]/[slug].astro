---
// for single post pages like /blog/yyyy/post-title/

import type {
  InferGetStaticParamsType,
} from "astro";

import { getCollection } from 'astro:content';
import Layout from '@layouts/MarkdownPage.astro';
import Giscus from '@components/Giscus.astro';
import BreadCrumbs from '@components/BreadCrumbs.astro';
import Prose from '@components/Prose.astro';

export const getStaticPaths = (async () => {
  const allPosts = await getCollection('blog');
  return allPosts
    .map((post) => {
      const parts = post.slug.split('/');
      if (parts.length !== 2) {
        console.warn(`[blog] Skipping invalid slug: ${post.slug}`);
        return null;
      }
      const [year, slug] = parts;
      return { params: { year, slug } };
    })
    .filter(Boolean);
});

type Params = InferGetStaticParamsType<typeof getStaticPaths>;

const { year, slug } = Astro.params as Params;
const urlSlug = `${year}/${slug}`;
const posts = await getCollection('blog');
const post = posts.find((p) => p.slug === urlSlug);

if (!post) {
  throw new Error(`[blog] getStaticPaths returned slug '${urlSlug}', but post was not found in getCollection(). This is a build-time error.`);
}

const html = post.rendered?.html ?? '';

const currentIndex = posts.findIndex((p) => p.slug === urlSlug);
const nextPost = posts[currentIndex + 1];
const prevPost = posts[currentIndex - 1];

import PostImage from '@components/PostImage.astro';

---

<Layout post={post} title={post.data.title} description={post.data.description ?? ''}>

  <article>

    <PostImage post={post} />

    <h2>{post.data.title}</h2>
    <p>{post.data.date.toLocaleDateString()}</p>
    <BreadCrumbs path={Astro.url.href} />
    <Prose set:html={html} />

    <div class="flex justify-between">
      {prevPost && (
        <a href={`/blog/${prevPost.slug}/`} class="text-blue-500 hover:underline">
          ← {prevPost.data.title}
        </a>
      )}
      {nextPost && (
        <a href={`/blog/${nextPost.slug}/`} class="text-blue-500 hover:underline">
          {nextPost.data.title} →
        </a>
      )}
    </div>

    <Giscus post={post} />

  </article>
</Layout>
