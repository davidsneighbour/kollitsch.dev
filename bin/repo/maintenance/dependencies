#!/bin/bash
# v20231105001

# set -euo pipefail # http://redsymbol.net/articles/unofficial-bash-strict-mode
IFS=$'\n\t'

# @todo quick check (just return status code)

REQUIRED_TOOLS=(
  git
)

# check if all requirements are met
for TOOL in "${REQUIRED_TOOLS[@]}"; do
  if ! command -v "${TOOL}" >/dev/null; then
    echo "${TOOL} is required... "
    exit 1
  fi
done

FILE=.env
if [ -f "$FILE" ]; then
  set -a # export all variables created next
  # this routine ranges through a folder of files that we don't explicitly know (@davidsneighbour)
  # see https://github.com/koalaman/shellcheck/wiki/SC1090
  # shellcheck source=/dev/null
  source "${FILE}"
  set +a # stop exporting
fi

# load required dependencies
IFS=' ' read -ra DEPENDENCIES_PARSED <<<"$DEPENDENCIES"
IFS=$'\n\t'

# check if all requirements are met
CHANGES=false
for DEPENDENCY in "${DEPENDENCIES_PARSED[@]}"; do
  cd ../"${DEPENDENCY}" >/dev/null || return
  if [ "$(git status --porcelain | wc -l)" -eq "0" ]; then
    continue
  else
    CHANGES=true
    echo -e "\e[1;36m${DEPENDENCY}\e[m"
    if [ -d .git ]; then
      git status -s
    fi
  fi
done

# list changed repositories
if [ ${CHANGES} = true ]; then
  echo -e "\e[1;36mUnhandled changes\e[m"
  for DEPENDENCY in "${DEPENDENCIES_PARSED[@]}"; do
    cd ../"${DEPENDENCY}" >/dev/null || echo ${DEPENDENCY} not found
    if [ "$(git status --porcelain | wc -l)" -eq "0" ]; then
      echo "ðŸŸ¢ ${DEPENDENCY}"
    else
      echo "ðŸŸ  ${DEPENDENCY}"
    fi
  done
fi

# ending
if [ ${CHANGES} = false ]; then
  true
else
  echo "Completed in ${SECONDS}s"
  echo
  exit 1
fi

set -euo pipefail # http://redsymbol.net/articles/unofficial-bash-strict-mode
IFS=$'\n\t'

# nc -w 10 -z 192.168.1.201 1313
