---
import type { CollectionEntry } from 'astro:content';
import type { ImageMetadata } from 'astro';

import {
  resolveCover,
  resolveImagePath,
  resolveAstroImage,
} from '@utils/images';
import { Picture } from 'astro:assets';
import { log } from '@utils/debug';

interface Props {
  post: CollectionEntry<'blog'>;
  classes?: string;
}
const { post, classes = 'w-full max-w-full h-auto mb-4 z-20' }: Props =
  Astro.props;

log.start();
log.stop();
log.debug('POSTIMAGE GENERATION ###########################################');
log.debug('COVER CONFIG', post.data.cover);
const coverImage = resolveCover(post);
log.debug('COVER RESOLVED', coverImage);
const imagePath = resolveImagePath(coverImage.src, post.id);
log.debug('IMAGE PATH RESOLVED', imagePath);
const imageMeta: ImageMetadata | null = imagePath
  ? resolveAstroImage(imagePath)
  : null;
log.debug('IMAGE META RESOLVED', imageMeta);
log.debug('POSTIMAGE GENERATION ENDED######################################');
log.stop();
---

{
  imageMeta && (
    <figure class="group relative isolate z-10">
      <Picture
        src={imageMeta}
        alt={coverImage.alt}
        formats={['avif', 'webp', 'jpeg']}
        widths={[240, 540, 720, 890, 1080, 1280, 1440, 1920]}
        layout="constrained"
        class={classes}
        quality="high"
        priority
      />
      {coverImage.title && (
        <figcaption
          transition:animate="slide"
          set:html={coverImage.title}
          class="absolute right-0 bottom-0 left-0 z-30 bg-orange-600/80 text-center text-orange-50/90 opacity-0 transition-all delay-100 duration-600 ease-in-out group-hover:opacity-100"
        />
      )}
    </figure>
  )
}
