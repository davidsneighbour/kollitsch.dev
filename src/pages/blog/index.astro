---
// for /blog/1/, /blog/2/, /blog/3/ (pagination)

import type { InferGetStaticParamsType } from 'astro';
import { getCollection } from 'astro:content';
import { getPostsSortedByDraft } from '@utils/content';
type Params = InferGetStaticParamsType<typeof getStaticPaths>;

// components
import Layout from '@layouts/DefaultPage.astro';
import Pagination from '@components/Pagination.astro';
import ArticleCard from '@components/ArticleCard.astro';
import BlogHeading from '@components/BlogHeading.astro';

export async function getStaticPaths() {
  const posts = getPostsSortedByDraft(await getCollection('blog'));
  const pageSize = 10;
  const totalPages = Math.ceil(posts.length / pageSize);

  return Array.from({ length: totalPages }).map((_, i) => ({
    params: { page: i === 0 ? '1' : `${i + 1}` }, // all as strings
  }));
}

import setup from '@data/setup.json';

const limit = setup.listpages?.limit || 12;
const { page } = Astro.params as Params;
const pageNumber = Number(page) || 1; // default to 1 if not provided
const allPosts = getPostsSortedByDraft(await getCollection('blog'));
const posts = allPosts.slice((pageNumber - 1) * limit, pageNumber * limit);
const totalPages = Math.ceil(allPosts.length / limit);

const post = {
  data: {
    title: 'Blog | KOLLITSCH.dev*',
    description: 'A collection of articles, tutorials, and updates.',
  },
};
---

<Layout post={post}>
  <BlogHeading
    title="Blog"
    posts={posts}
    level={1}
    description="A collection of articles, tutorials, and updates."
  />
  <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 xl:grid-cols-3">
    {
      posts.map(post => {
        return <ArticleCard post={post} />;
      })
    }
  </div>
  <Pagination
    basePath="/blog"
    currentPage={pageNumber}
    totalPages={totalPages}
  />
</Layout>
