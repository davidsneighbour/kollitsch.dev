---
import { withDefaults } from '@utils/withDefaults';

export interface Props {
  tags: Map<string, number>;
  minSize?: number;
  maxSize?: number;
}

const props = withDefaults(Astro.props as Props, {
  minSize: 0.75, // rem
  maxSize: 2.0,  // rem
}) as Required<Pick<Props,
  'tags' | 'minSize' | 'maxSize'
>>;

const maxCount = Math.max(...props.tags.values());
const minCount = Math.min(...props.tags.values());

function getFontSize(count: number): string {
  const weight = (count - minCount) / (maxCount - minCount || 1);
  const size = props.minSize + weight * (props.maxSize - props.minSize);
  return `${size.toFixed(2)}rem`;
}
---

<div class="flex flex-wrap gap-3">
  {Array.from(props.tags.entries()).map(([tag, count]) => (
    <a
      href={`/tags/${encodeURIComponent(tag)}/`}
      title={`${count} posts`}
      class="text-gray-700 dark:text-gray-200 hover:text-orange-600 dark:hover:text-orange-400 transition-colors"
      style={`font-size: ${getFontSize(count)}; line-height: 1.1;`}
    >
      #{tag}
    </a>
  ))}
</div>
