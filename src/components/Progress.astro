---
export interface Props {
  classes?: string;
}
const {
  classes = 'progress z-40 relative [--height:4px] lg:[--height:6px]',
}: Props = Astro.props;
---

<progress
  class={classes}
  value="0"
  max="100"
  aria-label="Reading progress"
></progress>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const getScroll = () => {
      const d = document.documentElement;
      const b = document.body;
      const top = d.scrollTop || b.scrollTop;
      const height = (d.scrollHeight || b.scrollHeight) - d.clientHeight;
      return height > 0 ? (top / height) * 100 : 0;
    };

    const updateProgress = () => {
      const scroll = getScroll();
      const progress = document.querySelector('progress.progress');
      if (progress) {
        progress.value = scroll;
        progress.style.setProperty('--scroll', `${scroll}%`);
      }
      progress.toggleAttribute('data-complete', progress.value >= 99.9); //
    };

    document.addEventListener('scroll', updateProgress, { passive: true });
    updateProgress();
    window.addEventListener('load', updateProgress);
  });
</script>

<style>
  @keyframes progress-bar-stripes {
    0% {
      background-position-x: 0;
    }

    100% {
      background-position-x: var(--bs-progress-height);
    }
  }

  .progress {
    --bs-progress-height: var(--thickness, var(--height, 4px));
    --bs-progress-font-size: 0.75rem;
    --bs-progress-bg: var(--bs-secondary-bg, rgba(0, 0, 0, 0.125));
    --bs-progress-border-radius: var(--bs-border-radius, 9999px);
    --bs-progress-box-shadow: var(
      --bs-box-shadow-inset,
      inset 0 1px 2px rgba(0, 0, 0, 0.075)
    );
    --bs-progress-bar-color: #ffffff;
    --bs-progress-bar-bg: #ff5500;
    --bs-progress-bar-transition: width 0.6s ease;

    display: block;
    width: 100%;
    height: var(--bs-progress-height);
    background-color: var(--bs-progress-bg);
    border-radius: 0;
    box-shadow: var(--bs-progress-box-shadow);
    appearance: none;
  }

  .progress::-webkit-progress-bar {
    background-color: var(--bs-progress-bg);
    border-radius: var(--bs-progress-border-radius);
  }

  .progress::-webkit-progress-value {
    color: var(--bs-progress-bar-color);
    background-color: var(--bs-progress-bar-bg);
    border-radius: var(--bs-progress-border-radius);
    background-image: linear-gradient(
      -45deg,
      rgba(255, 255, 255, 0.15) 25%,
      transparent 25%,
      transparent 50%,
      rgba(255, 255, 255, 0.15) 50%,
      rgba(255, 255, 255, 0.15) 75%,
      transparent 75%,
      transparent
    );
    background-size: var(--bs-progress-height) var(--bs-progress-height);
    animation: progress-bar-stripes 1s linear infinite;
    transition: var(--bs-progress-bar-transition);
  }

  .progress::-moz-progress-bar {
    color: var(--bs-progress-bar-color);
    background-color: var(--bs-progress-bar-bg);
    border-radius: var(--bs-progress-border-radius);
    background-image: linear-gradient(
      -45deg,
      rgba(255, 255, 255, 0.15) 25%,
      transparent 25%,
      transparent 50%,
      rgba(255, 255, 255, 0.15) 50%,
      rgba(255, 255, 255, 0.15) 75%,
      transparent 75%,
      transparent
    );
    background-size: var(--bs-progress-height) var(--bs-progress-height);
    animation: progress-bar-stripes 1s linear infinite;
    transition: var(--bs-progress-bar-transition);
  }

  @media (prefers-reduced-motion: reduce) {
    .progress::-webkit-progress-value,
    .progress::-moz-progress-bar {
      animation: none;
      transition: none;
    }
  }

  .progress:not([data-complete])::-webkit-progress-value,
  .progress:not([data-complete])::-moz-progress-bar {
    border-radius: 0 var(--bs-progress-border-radius)
      var(--bs-progress-border-radius) 0;
    transition:
      var(--bs-progress-bar-transition),
      border-radius 0.2s ease;
  }

  .progress[data-complete]::-webkit-progress-value,
  .progress[data-complete]::-moz-progress-bar {
    border-radius: 0;
    transition:
      var(--bs-progress-bar-transition),
      border-radius 0.2s ease;
  }
</style>
