---
import type { CollectionEntry } from 'astro:content';
import type { ImageMetadata } from 'astro';

import {
  resolveCover,
  resolveImagePath,
  resolveAstroImage,
} from '@utils/images';
import { Picture } from 'astro:assets';
import { log } from '@utils/debug';
import musicData from '@data/music.json';

interface Props {
  post: CollectionEntry<'blog'>;
  classes?: string;
}
const { post, classes = 'w-full max-w-full h-auto mb-4 z-20' }: Props =
  Astro.props;
log.start();
// log.stop();
log.debug('POSTIMAGE GENERATION ###########################################');
log.debug('COVER CONFIG', post.data.cover);
const cover = resolveCover(post);
log.debug('COVER RESOLVED', cover);
let imageMeta: ImageMetadata | null = null;
if (cover.src) {
  log.debug('COVER IMAGE SRC', cover.src);
  const imagePath = resolveImagePath(cover.src, post.id);
  log.debug('IMAGE PATH RESOLVED', imagePath);
  imageMeta = imagePath ? resolveAstroImage(imagePath) : null;
  log.debug('IMAGE META RESOLVED', imageMeta);
}
log.debug('POSTIMAGE GENERATION ENDED######################################');
log.stop();
---

{
  cover.type === 'video' && cover.video ? (
    <figure class="group relative isolate z-10">
      <div class={`aspect-2/1 overflow-hidden ${classes}`}>
        <lite-youtube
          videoid={cover.video.youtube}
          class="z-20 mb-4 h-auto w-full max-w-full"
        />
      </div>
      <script
        src="/vendor/lite-youtube-embed/lite-yt-embed.js"
        type="module"
        is:inline
      />
      <link
        rel="stylesheet"
        href="/vendor/lite-youtube-embed/lite-yt-embed.css"
      />

      <figcaption class="absolute right-0 bottom-0 left-0 z-30 bg-orange-600/80 text-center text-orange-50/90 opacity-0 transition-all delay-100 duration-600 ease-in-out group-hover:opacity-100">
        {(() => {
          const artist = musicData.data.find(
            a => a.slug === cover.video!.artist,
          );
          const name = artist ? artist.name : cover.video!.artist;
          return `${name} â€” ${cover.video!.title}`;
        })()}
      </figcaption>
    </figure>
  ) : (
    imageMeta && (
      <figure class="group relative isolate z-10">
        <Picture
          src={imageMeta}
          alt={cover.alt}
          formats={['avif', 'webp', 'jpeg']}
          widths={[240, 540, 720, 890, 1080, 1280, 1440, 1920]}
          sizes={`(max-width: 360px) 240px, (max-width: 720px) 540px, (max-width: 1600px) 720px, (max-width: 1920px) 890px, (max-width: 2560px) 1080px, (max-width: 3840px) 1280px, (max-width: 5120px) 1440px, 1920px`}
          layout="constrained"
          class={classes}
          quality="high"
          priority
        />
        {cover.title && (
          <figcaption
            transition:animate="slide"
            set:html={cover.title}
            class="absolute right-0 bottom-0 left-0 z-30 bg-orange-600/80 text-center text-orange-50/90 opacity-0 transition-all delay-100 duration-600 ease-in-out group-hover:opacity-100"
          />
        )}
      </figure>
    )
  )
}
