#!/bin/bash
# v2023.07.03

# set -euo pipefail # http://redsymbol.net/articles/unofficial-bash-strict-mode
# IFS=$'\n\t'

REQUIRED_TOOLS=(
  git
  hugo
  typos
  curl
)

for TOOL in "${REQUIRED_TOOLS[@]}"; do
  if ! command -v "${TOOL}" >/dev/null; then
    echo "${TOOL} is required... "
    exit 1
  fi
done

FILE=.env
if [ -f "$FILE" ]; then
  echo "exporting .env"
  set -a # export all variables created next
  # this routine ranges through a folder of files that we don't explicitly know (@davidsneighbour)
  # see https://github.com/koalaman/shellcheck/wiki/SC1090
  # shellcheck source=/dev/null
  source "${FILE}"
  set +a # stop exporting
fi

SCRIPTPATH="$(
  cd "$(dirname "$0")" >/dev/null 2>&1 || exit
  pwd -P
)"
CURPATH="$(pwd -P)"

/bin/bash "${CURPATH}"/bin/repo/maintenance/dependencies

# SCREENSHOTHOST="https://${IP}:${PORT}"
# node --no-warnings bin/services/site-screenshot.mjs --url "$SCREENSHOTHOST" --output "$CURPATH"/.github/images/screenshot.png
# git add "$CURPATH"/.github/images

# quietly shutting down concurring hugo servers
killall -q -9 hugo

# # update submodules
# declare -a modules=(
#   "themes/hugo-blockify"
#   "themes/hugo-theme"
# )
# for i in "${modules[@]}"; do
#   cd "$CURPATH/$i" || exit
#   npm run release
#   cd "$CURPATH" || exit
#   git add "$i"
# done
# cd "$CURPATH" || exit
# git commit -m "chore(git): update submodules" --no-verify
# # done: update submodules

# typos -- ./content

if test -f "$SCRIPTPATH"/bin/etc/hugo/replacements; then
  while read -ra __; do
    go mod edit -dropreplace "${__[0]}"
  done <"$SCRIPTPATH"/bin/etc/hugo/replacements
fi

#"${CURPATH}"/bin/build/prepare-docs

hugo mod get -u ./...
hugo mod tidy

git add "${CURPATH}"/go.mod
FILE="${CURPATH}"/go.sum
if test -f "$FILE"; then
  git add go.sum
fi

if test -f "$SCRIPTPATH"/bin/etc/hugo/replacements; then
  while read -ra __; do
    go mod edit -replace "${__[0]}"="${__[1]}"
  done <"$SCRIPTPATH"/bin/etc/hugo/replacements
fi

git commit --no-verify -m "chore: release preparation"
