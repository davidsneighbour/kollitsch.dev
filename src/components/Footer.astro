---
import { getHomepageUrl } from '@utils/content';
import { generateUniqueHtmlId } from '@utils/helpers';
import rawNavData from '@data/navigation.json';
import socialMediaData from '@content/social.json';
import IconLink from '@components/IconLink.astro';
import Heading from '@components/Heading.astro';
import setup from '@data/setup.json';
import type { IconName } from '@utils/icon-names';

import patrickkollitsch from '@assets/images/patrick-kollitsch.png';
import { Image } from 'astro:assets';
import Link from '@components/Link.astro';

const adjust = 1.9;
const titleLength = setup.title.length;
const titleFontSize = Math.floor((100 / titleLength) * adjust); // Adjust font size based on title length

const footerYearId = generateUniqueHtmlId();
const currentYear = new Date().getFullYear().toString();
const navData = rawNavData as Navigation;

import MarkdownIt from 'markdown-it';

const md = new MarkdownIt();

const introFallback = setup.introduction.replace('{$greeting}', '').trim();
const introFallbackHtml = md.renderInline(introFallback);
---

<footer class={setup.classes.containers.main}>
  <Heading
    level={2}
    class="sr-only"
  >
    Footer section with navigation and social media links
  </Heading>
  <div
    class="mt-8 mb-8 grid grid-cols-1 gap-8 border-t-1 border-t-gray-700 bg-gray-50 py-8 sm:grid-cols-2 md:grid-cols-6 dark:bg-gray-950"
  >
    <aside class="py-4 text-center sm:col-span-2 md:col-span-3 md:text-left">
      <Heading
        level={3}
        class="mb-4"
        >About</Heading
      >
      <div class="flex flex-row gap-4">
        <Link
          href="/connect/"
          class="basis-1/4"
        >
          <Image
            src={patrickkollitsch}
            alt="Patrick Kollitsch"
            width={128}
            height={128}
            loading="lazy"
            class="h-full w-full rounded-full border-1 border-gray-200 dark:border-gray-800"
          />
        </Link>
        <div
          id="about-introduction"
          class="basis-3/4 text-left"
          set:html={introFallbackHtml}
        />
      </div>
    </aside>
    <aside class="py-4">
      <Heading
        level={3}
        class="mb-4 text-center"
        >Navigation</Heading
      >
      <ul
        class="flex flex-row flex-wrap justify-center gap-2 text-center sm:justify-end lg:flex-col"
      >
        {
          navData.map(value => (
            <li>
              <IconLink
                href={value.link}
                icon={value.icon}
              >
                {value.label}
              </IconLink>
            </li>
          ))
        }
      </ul>
    </aside>
    <aside class="py-4 md:col-span-2">
      <Heading
        level={3}
        class="mb-4 text-center sm:text-right"
        >Connect</Heading
      >
      <ul class="flex flex-row flex-wrap justify-center gap-2 sm:justify-end">
        {
          socialMediaData.map(value => (
            <li>
              <IconLink
                href={value.url}
                icon={value.icon as IconName}
                target="_blank"
                rel="noopener noreferrer"
              >
                {value.label}
              </IconLink>
            </li>
          ))
        }
      </ul>
    </aside>
  </div>

  <div
    class="grid grid-cols-1 items-center justify-between border-t border-gray-800 pt-6 lg:grid-cols-3"
  >
    <span class="text-center lg:text-left"
      >&copy; <span id={footerYearId}>{currentYear}</span>
      <a href={getHomepageUrl()}>{setup.title}</a></span
    >
    <span class="text-center">All rights reserved.</span>
    <span class="text-center lg:text-right"
      >Webwork done by <a href="https://davids-neighbour.com/"
        >David's Neighbour</a
      ></span
    >
  </div>

  <div class="my-4 flex flex-row items-center justify-center gap-8 text-sm">
    <IconLink
      href="/privacy-policy/"
      icon="shield-check"
    >
      Privacy Policy
    </IconLink>
    <IconLink
      href="/security-policy/"
      icon="fingerprint"
    >
      Security Policy
    </IconLink>
  </div>
</footer>

<footer
  class="h-max-[8vw] overflow-y-hidden text-center"
  aria-hidden="true"
>
  <div
    class="font-changa text-center leading-none font-normal whitespace-nowrap text-gray-200/10 transition duration-2000 ease-in-out select-none hover:text-gray-200/50 dark:text-gray-800/10 dark:hover:text-gray-800/50"
    style={`font-size: ${titleFontSize}vw;`}
  >
    {setup.title}
  </div>
</footer>

<script is:inline define:vars={{ footerYearId }}>
  document.getElementById(footerYearId).innerText = new Date().getFullYear();
</script>

{
  /*
    Creating an introduction in the footer dynamically based on some variables... Currently local time only.
    VSCode will complain about setting is:inline here, but it's not inline here.
  */
}
<script
  type="module"
  defer
  define:vars={{ introRaw: setup.introduction, greetings: setup.greetings }}
>
  import { renderIntroduction } from '/src/assets/scripts/render-intro.ts';

  const target = document.getElementById('about-introduction');
  if (target) {
    const html = renderIntroduction(introRaw, greetings);
    console.log(html);
    target.innerHTML = html;
  }
</script>
