/*******************************************************************************
 * Outlines
 ******************************************************************************/
$devmode: true !default;

@if $devmode {

  /* Debug Outlines for All Elements */
  * {
    outline: 1px solid #023020;
    box-sizing: border-box !important;
  }

  /* Show only innermost hovered element */
  *:hover:not(:has(:hover)) {
    outline: 1px solid #ff5500;
    background-color: rgba(255, 85, 0, 0.05);
    position: relative;
    z-index: 9999;
  }

  /* Reset parent outlines */
  *:has(:hover) {
    outline: 1px solid #023020 !important;
  }

  /* Bootstrap-specific interactive elements */
  a:hover,
  button:hover,
  .nav-link:hover,
  .dropdown-item:hover,
  .btn:hover {
    outline: 2px solid #ff5500 !important;
  }

  /* Leaf node fallback */
  *:hover:not(:has(*)) {
    outline: 2px dashed #ff5500;
  }

  /* Promote inline elements to box for outline visibility */
  /* Only promote inline elements that are visible and not aria-hidden */
  // Safe promotion of inline elements â€” exclude hidden ones
  a:not(.d-none):not([hidden]):not([aria-hidden="true"]),
  span:not(.d-none):not([hidden]):not([aria-hidden="true"]),
  small:not(.d-none):not([hidden]):not([aria-hidden="true"]),
  strong:not(.d-none):not([hidden]):not([aria-hidden="true"]),
  em:not(.d-none):not([hidden]):not([aria-hidden="true"]),
  label:not(.d-none):not([hidden]):not([aria-hidden="true"]),
  abbr:not(.d-none):not([hidden]):not([aria-hidden="true"]) {
    display: inline-block !important;
  }

  /* Detect and mark overflow-hidden containers */
  [style*='overflow: hidden'],
  [class*='overflow-hidden'] {
    background-color: rgba(255, 0, 0, 0.05) !important;
    outline: 1px dashed red !important;
  }
}

/*******************************************************************************
 * End of Outlines
 ******************************************************************************/

img:not([alt]),
img[alt="Alt Text"],
img[alt=""]:not([role="none presentation"]):not([role="presentation"]) {
  outline: 20px dashed red !important;
  outline-offset: 20px !important;
}

img[alt^="image of" i],
img[alt^="picture of" i] {
  outline: 20px dotted darkorange !important;
  outline-offset: 20px !important;
}

img:not([width]),
img:not([height]) {
  outline: 20px dotted darkorange !important;
  outline-offset: 20px !important;
}

img:not[longdesc] {
  outline: 20px dotted darkorange !important;
  outline-offset: 20px !important;
}

/*******************************************************************************
 * Indicator styles
 ******************************************************************************/
.responsive-indicator {

  @extend .bg-dark-subtle;
  @extend .rounded-end;
  @extend .mt-3;

  @extend .position-fixed;
  @extend .bottom-0;
  @extend .left-0 !optional;

  @include media-breakpoint-down(md) {
    width: 100%;
  }

  @include media-breakpoint-up(md) {
    width: 50%;
  }

  &>div {
    @extend .d-flex;
    @extend .p-2;
    @extend .flex-row;
    @extend .justify-content-center;
    @extend .align-items-center;
    @extend .column-gap-3;

    .identifier {
      @extend .text-uppercase;
    }
  }

  @property --_w {
    syntax: '<length>';
    inherits: true;
    initial-value: 100vw;
  }

  @property --_h {
    syntax: '<length>';
    inherits: true;
    initial-value: 100vh;
  }

  :root {
    --w: tan(atan2(var(--_w), 1px));
    --h: tan(atan2(var(--_h), 1px));
  }

  .measurements:before {
    content: counter(w) "x" counter(h) "px";
    counter-reset: h var(--h) w var(--w);
    width: fit-content;
    height: fit-content;
  }

}

div:empty,
p:empty {
  border: 1px solid red;
}