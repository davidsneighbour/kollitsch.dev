---
// @todo refactor and comment
import type { CollectionEntry } from 'astro:content';
import type { MarkdownInstance } from 'astro';

import { hasComponent } from '@utils/component';

type BlogEntry =
  | CollectionEntry<'blog'>
  | (MarkdownInstance<Record<string, unknown>> & {
      data?: Record<string, unknown>;
    });

export interface Props {
  post?: BlogEntry;
}

const { post }: Props = Astro.props;

const hasLiteYoutube = hasComponent(post, 'lite-youtube');
const hasColorGrid = hasComponent(post, 'color-grid');
const hasDatediff = hasComponent(post, 'date-diff');
---

{
  hasLiteYoutube && (
    <>
      <script
        src="/vendor/lite-youtube-embed/lite-yt-embed.js"
        async
        is:inline
      />
    </>
  )
}

{
  hasColorGrid && (
    <>
      <script
        src="/vendor/color-grid.js"
        async
        is:inline
      />
    </>
  )
}

{
  hasDatediff && (
    <>
      <script
        src="/vendor/datediff.js"
        async
        is:inline
      />
    </>
  )
}
