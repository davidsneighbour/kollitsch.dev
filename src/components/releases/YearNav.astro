---
import type { Release } from "@utils/releases.ts";
import { getYears } from "@utils/releases.ts";

const { all, currentYear: propYear } = Astro.props as {
  all: Release[];
  currentYear?: number | null;
};

const years = getYears(all);
const currentYear = propYear ?? years[0];
---

<nav class="isolate flex justify-end mb-4">
  {
    years.map((y, i) => {
      const isFirst = i === 0;
      const isCurrent = y === currentYear;

      const baseClasses =
        "relative inline-flex items-center px-3 py-2 text-sm text-gray-900 inset-ring-1 inset-ring-gray-300 focus:z-10 dark:text-white dark:inset-ring-gray-700 \
        first:rounded-l-md last:rounded-r-md";
      const subsequentClass = !isFirst ? "-ml-px" : "";
      const current = isCurrent
        ? "bg-gray-30 dark:bg-gray-30/10 hover:bg-gray-50 dark:hover:bg-white/20"
        : "bg-white dark:bg-white/10 hover:bg-gray-50 dark:hover:bg-white/20";

      const classes = `${baseClasses} ${subsequentClass} ${current}`;

      return isCurrent ? (
        <span
          class={classes}
          data-item={i}
        >
          {y}
        </span>
      ) : (
        <a
          class={classes}
          href={`/releases/year/${y}/1/`}
          data-item={i}
        >
          {y}
        </a>
      );
    })
  }
</nav>
