---
import { Icon } from 'astro-icon/components';
import networks from '@content/social.json';

interface Props {
  title: string;
  description: string;
  via?: string;
}

const shareNetworks = networks.filter(n => n.share);
const { title, description }: Props = Astro.props;

type ShareVars = {
  url?: string;
  title?: string;
  description?: string;
};

const vars: ShareVars = {
  url: Astro.request.url,
  title,
  description,
};
---

<div class="relative my-8">
  <div class="relative flex justify-center">
    <div class="relative group w-full max-w-5xl">
      <div
        class="pointer-events-auto absolute -inset-x-[100px] -inset-y-[100px] hidden md:block"
        aria-hidden="true"
      />
      <div
        class="relative z-10 grid grid-cols-4 gap-1 sm:grid-cols-6 md:flex md:flex-wrap md:justify-center"
      >
        <span class="hidden md:inline-block md:flex-1" />

        {
          shareNetworks.map((network, index) => {
            const isFirst = index === 0;
            const isLast = index === shareNetworks.length - 1;
            const baseClass = `
              relative inline-flex items-center justify-center
              focus:z-10
              bg-gray-50 dark:bg-gray-950
              text-gray-400 dark:text-gray-600
              ring-1 ring-inset ring-gray-300 dark:ring-gray-700
              px-4 py-3 sm:px-3 sm:py-2
              transition-colors
              hover:duration-200 group-hover:duration-[2500ms]
              focus-visible:outline
              focus-visible:outline-2
              focus-visible:outline-offset-2
              focus-visible:outline-current
            `;
            const extraClass = `
              ${isFirst ? 'md:rounded-l-md' : ''}
              ${isLast ? 'md:rounded-r-md' : ''}
              ${network.fill} ${network.background}
              transition-colors duration-[2500ms]
            `;
            const href = network.share
              ? network.share.replace(/\${([^}]+)}/g, (_, key) =>
                  encodeURIComponent(vars[key as keyof ShareVars] ?? '').replace(/%20/g, '+')
                )
              : network.url;

            return (
              <a
                href={href}
                class={`${baseClass} ${extraClass}`}
                target="_blank"
                rel="noopener noreferrer"
              >
                <span class="sr-only">{network.label}</span>
                <Icon name={network.icon} />
              </a>
            );
          })
        }
        <span class="hidden md:inline-block md:flex-1" />
      </div>
    </div>
  </div>
</div>
