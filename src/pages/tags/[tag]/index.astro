---
import Layout from '@layouts/DefaultPage.astro';
import ArticleCard from '@components/ArticleCard.astro';
import TagIntro from '@components/TagIntro.astro';
import Pagination from '@components/Pagination.astro';
import { getEntry } from 'astro:content';

import { getAllTags } from '@utils/helpers';
import setup from '@data/setup.json';

const { tag } = Astro.params;

const tagMap = await getAllTags();
const tagInfo = tagMap.get(tag);

if (!tagInfo) throw new Error(`Tag '${tag}' not found`);
const taggedPosts = tagInfo.posts;
const tagEntry = await getEntry({ collection: 'tags', id: tag }).catch(
  () => null,
);

// Pagination
const limit = setup.listpages?.limit || 12;
const pageSize = limit;
const currentPage = 1;
const totalPages = Math.ceil(taggedPosts.length / pageSize);
const paginatedPosts = taggedPosts.slice(0, pageSize);

// Metadata
const post = {
  data: {
    title: `#${tag}`,
    description: tagEntry?.data.description || `Posts tagged with #${tag}`,
  },
};

export async function getStaticPaths() {
  const tagMap = await getAllTags();
  return Array.from(tagMap.keys()).map(tag => ({
    params: { tag },
  }));
}
---

<Layout post={post}>
  {
    tagEntry && (
      <TagIntro
        title={tagEntry.data.label}
        description={tagEntry.data.description}
      />
    )
  }

  {!tagEntry && <h1 class="mb-6 text-4xl">#{tag}</h1>}

  <div
    class="grid grid-cols-1 gap-4 sm:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4"
  >
    {
      paginatedPosts
        .filter(post => post.collection === 'blog')
        .map(post => <ArticleCard post={post} />)
    }
  </div>

  <Pagination
    basePath={`/tags/${tag}/`}
    currentPage={currentPage}
    totalPages={totalPages}
    pagingPartial="/page/"
  />
</Layout>
