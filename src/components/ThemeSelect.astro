---

---

<theme-selector hide-auto></theme-selector>
<script is:inline>
  // @see https://tailwindcss.com/docs/dark-mode
  if (!customElements.get('theme-selector')) {
    customElements.define(
      'theme-selector',
      class extends HTMLElement {
        connectedCallback() {
          const hideAuto = this.hasAttribute('hide-auto');

          // keep auto support but only show light/dark if hideAuto
          this.themes = hideAuto
            ? ['light', 'dark']
            : ['auto', 'light', 'dark'];

          // build button
          this.btn = document.createElement('button');
          this.btn.setAttribute('aria-label', 'Toggle theme');
          this.btn.addEventListener('click', () => this.nextTheme());
          this.appendChild(this.btn);

          this.updateIcon();
          document.addEventListener('theme-changed', () => this.updateIcon());
        }

        nextTheme() {
          try {
            const current = theme.getTheme();
            const idx = this.themes.indexOf(current);

            // if current is auto but hidden, map to system index
            const realIdx =
              idx >= 0 ? idx : this.themes.indexOf(theme.getSystemTheme());

            const next = this.themes[(realIdx + 1) % this.themes.length];
            theme.setTheme(next);
          } catch (err) {
            console.error('theme-selector ‚Ä∫ cycle error:', err);
          }
        }

        updateIcon(t = theme.getTheme()) {
          // if auto is hidden, show based on systemTheme
          const hideAuto = this.hasAttribute('hide-auto');
          const effective =
            t === 'auto' && hideAuto ? theme.getSystemTheme() : t;

          const icons = {
            light: '‚òÄÔ∏è',
            dark: 'üåô',
            auto: 'üåì',
          };
          this.btn.textContent = icons[effective] ?? icons.auto;
        }
      },
    );
  }

// // On page load or when changing themes, best to add inline in `head` to avoid FOUC
// document.documentElement.classList.toggle(
//   "dark",
//   localStorage.theme === "dark" ||
//     (!("theme" in localStorage) && window.matchMedia("(prefers-color-scheme: dark)").matches),
// );
// // Whenever the user explicitly chooses light mode
// localStorage.theme = "light";
// // Whenever the user explicitly chooses dark mode
// localStorage.theme = "dark";
// // Whenever the user explicitly chooses to respect the OS preference
// localStorage.removeItem("theme");

</script>


{/*
Enabled: "bg-indigo-600", Not Enabled: "bg-gray-200"
<button type="button" class="relative inline-flex h-6 w-11 shrink-0 cursor-pointer rounded-full border-2 border-transparent bg-gray-200 transition-colors duration-200 ease-in-out focus:ring-2 focus:ring-indigo-600 focus:ring-offset-2 focus:outline-hidden" role="switch" aria-checked="false">
  <span class="sr-only">Use setting</span>
  <!-- Enabled: "translate-x-5", Not Enabled: "translate-x-0" -->
  <span class="pointer-events-none relative inline-block size-5 translate-x-0 transform rounded-full bg-white shadow-sm ring-0 transition duration-200 ease-in-out">
    <!-- Enabled: "opacity-0 duration-100 ease-out", Not Enabled: "opacity-100 duration-200 ease-in" -->
    <span class="absolute inset-0 flex size-full items-center justify-center opacity-100 transition-opacity duration-200 ease-in" aria-hidden="true">
      <svg class="size-3 text-gray-400" fill="none" viewBox="0 0 12 12">
        <path d="M4 8l2-2m0 0l2-2M6 6L4 4m2 2l2 2" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
      </svg>
    </span>
    <!-- Enabled: "opacity-100 duration-200 ease-in", Not Enabled: "opacity-0 duration-100 ease-out" -->
    <span class="absolute inset-0 flex size-full items-center justify-center opacity-0 transition-opacity duration-100 ease-out" aria-hidden="true">
      <svg class="size-3 text-indigo-600" fill="currentColor" viewBox="0 0 12 12">
        <path d="M3.707 5.293a1 1 0 00-1.414 1.414l1.414-1.414zM5 8l-.707.707a1 1 0 001.414 0L5 8zm4.707-3.293a1 1 0 00-1.414-1.414l1.414 1.414zm-7.414 2l2 2 1.414-1.414-2-2-1.414 1.414zm3.414 2l4-4-1.414-1.414-4 4 1.414 1.414z" />
      </svg>
    </span>
  </span>
</button>
 */}
